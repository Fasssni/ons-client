{"ast":null,"code":"import img from \"../img/example.jpg\";\nimport { loadState } from \"../localStorage\";\nconst loadedState = loadState();\nconst defaultState = {\n  items: [],\n  total: parseInt(0),\n  userInfo: [{\n    name: \"Insaf\",\n    mail: \"sadikovisaf@99gmail.com\",\n    address: \"Kazan\"\n  }],\n  loadState\n};\nexport const basketReducer = function () {\n  var _state$items;\n\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      return { ...state,\n        items: [...state.items, action.payload]\n      };\n\n    case \"REMOVE_ITEM\":\n      let sum;\n      return { ...state,\n        items: state.items.filter(e => e.id !== action.payload.id),\n        total: (_state$items = state.items) === null || _state$items === void 0 ? void 0 : _state$items.map(p => {\n          sum = parseInt(sum) + +Number(parseInt(p.count) * parseInt(p.price));\n          return parseInt(sum);\n        })\n      };\n\n    case \"GET_USER\":\n      return { ...state,\n        userInfo: [...state.userInfo, action.payload]\n      };\n\n    case \"COUNT\":\n      let count;\n      state.items.map(item => item.id == action.payload.id ? item.count = action.payload.counter : item);\n      console.log(state.items); // state.items.map((item)=>item.id==action.payload.id?item.count=action.payload.counter:1)\n\n      let amount = 0;\n      return { ...state,\n        total: state.items.map(p => {\n          amount = parseInt(amount) + +Number(parseInt(p.count) * parseInt(p.price));\n          return parseInt(amount);\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["img","loadState","loadedState","defaultState","items","total","parseInt","userInfo","name","mail","address","basketReducer","state","action","type","payload","sum","filter","e","id","map","p","Number","count","price","item","counter","console","log","amount"],"sources":["C:/Users/User/Desktop/OnS/client/src/reducers/basketReducer.js"],"sourcesContent":["import img from \"../img/example.jpg\"\r\nimport { loadState } from \"../localStorage\"\r\n\r\n\r\nconst loadedState=loadState()\r\n\r\nconst defaultState={ \r\n   \r\n        items:[], \r\n\r\n        total:parseInt(0),\r\n\r\n        userInfo:[{name:\"Insaf\",mail:\"sadikovisaf@99gmail.com\", address:\"Kazan\"}],\r\n\r\n        loadState\r\n\r\n\r\n\r\n       \r\n        \r\n\r\n    }\r\n\r\n\r\nexport const basketReducer=(state=defaultState,action)=>{ \r\n    switch(action.type){\r\n        case \"ADD_ITEM\":\r\n            \r\n            \r\n\r\n            return{\r\n                ...state,\r\n                items:[...state.items,action.payload],\r\n                \r\n            }\r\n        case \"REMOVE_ITEM\":\r\n\r\n            let sum\r\n\r\n            return{\r\n                ...state,\r\n                items:state.items.filter((e)=>e.id!==action.payload.id),\r\n                total:state.items?.map((p)=>{\r\n                   \r\n                    \r\n                    sum=parseInt(sum)+ +Number(parseInt(p.count)*parseInt(p.price))\r\n                    return(parseInt(sum))\r\n                    }\r\n                    )\r\n             \r\n\r\n            }\r\n\r\n        case \"GET_USER\":\r\n            return{ \r\n                ...state,\r\n                userInfo:[...state.userInfo,action.payload]\r\n              \r\n            }\r\n\r\n        case \"COUNT\":\r\n\r\n            let count \r\n\r\n            state.items.map((item)=>item.id==action.payload.id\r\n                ?item.count=action.payload.counter\r\n                 \r\n                :item\r\n            )\r\n            console.log(state.items)\r\n            // state.items.map((item)=>item.id==action.payload.id?item.count=action.payload.counter:1)\r\n              \r\n            let amount=0\r\n            \r\n            \r\n\r\n             return{ \r\n                ...state,\r\n                \r\n                total:state.items.map((p)=>{\r\n                   \r\n                    \r\n                    amount=parseInt(amount)+ +Number(parseInt(p.count)*parseInt(p.price))\r\n                    return(parseInt(amount))\r\n                    }\r\n                    )\r\n             }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAGA,MAAMC,WAAW,GAACD,SAAS,EAA3B;AAEA,MAAME,YAAY,GAAC;EAEXC,KAAK,EAAC,EAFK;EAIXC,KAAK,EAACC,QAAQ,CAAC,CAAD,CAJH;EAMXC,QAAQ,EAAC,CAAC;IAACC,IAAI,EAAC,OAAN;IAAcC,IAAI,EAAC,yBAAnB;IAA8CC,OAAO,EAAC;EAAtD,CAAD,CANE;EAQXT;AARW,CAAnB;AAkBA,OAAO,MAAMU,aAAa,GAAC,YAA6B;EAAA;;EAAA,IAA5BC,KAA4B,uEAAtBT,YAAsB;EAAA,IAATU,MAAS;;EACpD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,UAAL;MAII,OAAM,EACF,GAAGF,KADD;QAEFR,KAAK,EAAC,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAgBS,MAAM,CAACE,OAAvB;MAFJ,CAAN;;IAKJ,KAAK,aAAL;MAEI,IAAIC,GAAJ;MAEA,OAAM,EACF,GAAGJ,KADD;QAEFR,KAAK,EAACQ,KAAK,CAACR,KAAN,CAAYa,MAAZ,CAAoBC,CAAD,IAAKA,CAAC,CAACC,EAAF,KAAON,MAAM,CAACE,OAAP,CAAeI,EAA9C,CAFJ;QAGFd,KAAK,kBAACO,KAAK,CAACR,KAAP,iDAAC,aAAagB,GAAb,CAAkBC,CAAD,IAAK;UAGxBL,GAAG,GAACV,QAAQ,CAACU,GAAD,CAAR,GAAe,CAACM,MAAM,CAAChB,QAAQ,CAACe,CAAC,CAACE,KAAH,CAAR,GAAkBjB,QAAQ,CAACe,CAAC,CAACG,KAAH,CAA3B,CAA1B;UACA,OAAOlB,QAAQ,CAACU,GAAD,CAAf;QACC,CALC;MAHJ,CAAN;;IAcJ,KAAK,UAAL;MACI,OAAM,EACF,GAAGJ,KADD;QAEFL,QAAQ,EAAC,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAmBM,MAAM,CAACE,OAA1B;MAFP,CAAN;;IAMJ,KAAK,OAAL;MAEI,IAAIQ,KAAJ;MAEAX,KAAK,CAACR,KAAN,CAAYgB,GAAZ,CAAiBK,IAAD,IAAQA,IAAI,CAACN,EAAL,IAASN,MAAM,CAACE,OAAP,CAAeI,EAAxB,GACnBM,IAAI,CAACF,KAAL,GAAWV,MAAM,CAACE,OAAP,CAAeW,OADP,GAGnBD,IAHL;MAKAE,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACR,KAAlB,EATJ,CAUI;;MAEA,IAAIyB,MAAM,GAAC,CAAX;MAIC,OAAM,EACH,GAAGjB,KADA;QAGHP,KAAK,EAACO,KAAK,CAACR,KAAN,CAAYgB,GAAZ,CAAiBC,CAAD,IAAK;UAGvBQ,MAAM,GAACvB,QAAQ,CAACuB,MAAD,CAAR,GAAkB,CAACP,MAAM,CAAChB,QAAQ,CAACe,CAAC,CAACE,KAAH,CAAR,GAAkBjB,QAAQ,CAACe,CAAC,CAACG,KAAH,CAA3B,CAAhC;UACA,OAAOlB,QAAQ,CAACuB,MAAD,CAAf;QACC,CALC;MAHH,CAAN;;IAYL;MACI,OAAOjB,KAAP;EAhER;AAmEH,CApEM"},"metadata":{},"sourceType":"module"}